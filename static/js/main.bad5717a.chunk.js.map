{"version":3,"sources":["components/Preview.js","components/TimerSettings.js","components/Toolbar.js","components/App.js","index.js"],"names":["Preview","props","id","isOnBreak","breakLength","sessionLength","TimerSettings","className","onClick","changeLength","Toolbar","Row","Col","handleStop","size","handlePlayPause","isRunning","handleRefresh","initialState","totalSeconds","App","state","intervalId","handleKeyPress","e","code","clearInterval","setInterval","countDown","setState","updatedTotalSeconds","document","getElementById","play","pause","currentTime","event","target","increasedSession","decreasedSession","increasedBreak","decreasedBreak","console","log","renderTimer","minute","Math","floor","second","addEventListener","this","src","Component","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.bad5717a.chunk.js","sourcesContent":["import React from 'react'\n\nconst Preview = (props) => {\n    return (\n        <div>\n            <div id='timer-label'><b>{props.isOnBreak ? 'Break' : 'Session'}</b></div>\n            <div id='time-left'>{props.isOnBreak ? props.breakLength : props.sessionLength}</div>\n        </div>\n    )\n}\n\nexport default Preview\n","import React from 'react'\n\nconst TimerSettings = (props) => {\n    return (\n        <div className='row'>\n            <div className='length-label'>\n                <span id='session-label'>\n                    Session\n                </span>\n                <div>\n                    <div id='session-increment' className='btn btn-dark' onClick={props.changeLength}> + </div>\n                    <div id='session-length'>\n                        {props.sessionLength}\n                    </div>\n                    <div id='session-decrement' className='btn btn-dark' onClick={props.changeLength}> - </div>\n                </div>\n            </div>\n            <div className='length-label'>\n                <span id='break-label'>\n                    Break\n                </span>\n                <div>\n                    <div id='break-increment' className='btn btn-dark' onClick={props.changeLength}> + </div>\n                    <div id='break-length'>\n                        {props.breakLength}\n                    </div>\n                    <div id='break-decrement' className='btn btn-dark' onClick={props.changeLength}> - </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TimerSettings\n","import React from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport {FaStopCircle, FaPlayCircle, FaPauseCircle } from 'react-icons/fa'\nimport { IoMdRefreshCircle } from 'react-icons/io'\n\n\nconst Toolbar = (props) => {\n\n    return (\n        <div className=\"toolbar\">\n            <Row>\n                <Col>\n                    <span className='btn btn-toolbar' onClick={props.handleStop} >\n                        <FaStopCircle size='40px' />\n                    </span>\n                </Col>\n                <Col>\n                    <span id='start_stop' className='btn btn-toolbar' onClick={props.handlePlayPause} > \n                        {props.isRunning ? <FaPauseCircle size='40px' /> : <FaPlayCircle size='40px' />}\n                    </span>     \n                </Col>\n                <Col>\n                    <span id ='reset' className='btn btn-toolbar' onClick={props.handleRefresh} > \n                        <IoMdRefreshCircle size='40px' /> \n                    </span>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default Toolbar\n","import React, { Component } from 'react'\n\nimport Preview from './Preview'\nimport TimerSettings from './TimerSettings'\nimport Toolbar from './Toolbar'\n\n\nconst initialState = {\n        isRunning : false,\n        sessionLength : 25,\n        breakLength : 5,\n        totalSeconds : 1500,\n        isOnBreak : false\n}\n\nexport class App extends Component {\n    state = initialState;\n    intervalId = 'countDown';\n\n    componentDidMount(){\n        document.addEventListener('keydown', this.handleKeyPress);\n    }\n\n    handleKeyPress = e => {\n        if(e.code === 'Space') {\n            this.handlePlayPause();\n        }\n    }\n\n\n    handlePlayPause = () => {\n        if(!this.state.isRunning){\n            this.intervalId = setInterval(this.countDown, 1000);\n        } else {\n            clearInterval(this.intervalId)\n        }\n        this.setState({ isRunning : !this.state.isRunning });\n\n    }\n    countDown = () => {\n        const updatedTotalSeconds = this.state.totalSeconds -1;\n        this.setState({ totalSeconds : updatedTotalSeconds });\n            if(updatedTotalSeconds < 0) {\n                if(this.state.isOnBreak) {\n                    document.getElementById('beep').play()\n                    this.setState({\n                        isOnBreak : false,\n                        totalSeconds : this.state.sessionLength * 60\n                    })\n                } else {\n                    document.getElementById('beep').play()\n                    this.setState({\n                        isOnBreak : true,\n                        totalSeconds : this.state.breakLength * 60\n                    })\n                }\n            }\n    }\n\n    // work on totalSeconds\n    handleStop = () => {\n        clearInterval(this.intervalId)\n        if(this.state.isOnBreak){\n            this.setState({\n                isRunning : false,\n                breakLength : this.state.breakLength,\n                totalSeconds : this.state.breakLength * 60\n            })\n        } else {\n            this.setState({\n                isRunning : false,\n                sessionLength : this.state.sessionLength,\n                totalSeconds : this.state.sessionLength * 60\n            })\n        }\n    }\n\n    handleRefresh = () => {\n        document.getElementById('beep').pause();\n        document.getElementById('beep').currentTime = 0;\n        clearInterval(this.intervalId)\n        this.setState(initialState);\n    }\n\n    changeLength = event => {\n        // be sure timer is not running\n        if(!this.state.isRunning) {\n            // Check the id of onClick function\n            switch(event.target.id) {\n                case 'session-increment' :\n                    let increasedSession = this.state.sessionLength + 1;\n                    this.state.sessionLength<60 && this.setState({\n                        sessionLength : increasedSession,\n                        totalSeconds : increasedSession * 60\n                    });\n                    break;\n                case 'session-decrement' :\n                    let decreasedSession = this.state.sessionLength - 1;\n                    this.state.sessionLength>1 && this.setState({\n                        sessionLength : decreasedSession,\n                        totalSeconds : decreasedSession * 60\n                    });\n                    break;\n                case 'break-increment' :\n                    let increasedBreak = this.state.breakLength + 1;\n                    this.state.breakLength<60 && this.setState({\n                        breakLength : increasedBreak\n                    });\n                    break;\n                case 'break-decrement' :\n                    let decreasedBreak = this.state.breakLength - 1;\n                    this.state.breakLength>1 && this.setState({\n                        breakLength : decreasedBreak\n                    });\n                    break;\n                default : \n                    console.log(event.target.id);\n            } \n        }\n    }\n\n    renderTimer = () => {\n        let minute = Math.floor(this.state.totalSeconds / 60);\n        let second = this.state.totalSeconds - (minute * 60);\n        if(minute<10 && minute >= 0) {\n            minute = '0' + minute;\n        }\n        if(second<10 && second >=0) {\n            second = '0' + second;\n        }\n        return minute + ':' + second;\n    }\n    \n    render() {\n        return (\n            <div id='app-wrapper'>\n                <Preview \n                    isOnBreak={this.state.isOnBreak}\n                    sessionLength={this.renderTimer()} \n                    breakLength={this.renderTimer()} \n                />\n                <Toolbar \n                    handleStop={this.handleStop} \n                    handlePlayPause={this.handlePlayPause} \n                    handleRefresh={this.handleRefresh} \n                    isRunning={this.state.isRunning}\n                    />\n                <TimerSettings \n                    sessionLength={this.state.sessionLength} \n                    breakLength={this.state.breakLength} \n                    changeLength={this.changeLength}\n                />\n                <audio id='beep' src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\" />\n            </div>\n        )\n    }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport './styles.css'\n\nReactDOM.render(\n    <App />,\n    document.querySelector('#root')\n)"],"sourceRoot":""}